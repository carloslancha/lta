enum PoulesType {
  POSITIONING
  QUALIFICATION
}

type Academy {
    country: String!
    createdBy: User @relation(name: "AcademiesOnUser", onDelete: SET_NULL)
    id: ID! @id
    name: String! @unique
    schools: [School!] @relation(name: "SchoolOnAcademy", onDelete: CASCADE)
}

type Clan {
    createdBy: User @relation(name: "ClanOnUser", onDelete: SET_NULL)
    id: ID! @id
    name: String!
    players: [Player!] @relation(name: "PlayerOnClan", onDelete: CASCADE)
    school: School! @relation(name: "ClanOnSchool", onDelete: SET_NULL)
}

type Form {
    createdBy: User @relation(name: "FormOnUser", onDelete: SET_NULL)
    id: ID! @id
    name: String!
    players: [Player!] @relation(name: "FormOnPlayer", onDelete: SET_NULL)
}

type Poule {
    createdBy: User @relation(name: "PouleOnUser", onDelete: SET_NULL)
	id: ID! @id
	name: String!
	players: [Player!]! @relation(name: "PlayerOnPoule", onDelete: SET_NULL)
	tournament: Tournament! @relation(name: "PouleOnTournament", onDelete: SET_NULL)
}

type Player {
    clan: Clan! @relation(name: "PlayerOnClan", onDelete: SET_NULL)
    createdBy: User @relation(name: "PlayerOnUser", onDelete: SET_NULL)
    familyName: String!
    forms: [Form!] @relation(name: "FormOnPlayer", onDelete: SET_NULL)
    id: ID! @id
    name: String!
    nickname: String!
    poules: [Poule!] @relation(name: "PlayerOnPoule", onDelete: SET_NULL)
    tournaments: [Tournament!] @relation(name: "PlayerOnTournament", onDelete: SET_NULL)
}

type School {
    academy: Academy! @relation(name: "SchoolOnAcademy", onDelete: SET_NULL)
    clans: [Clan!] @relation(name: "ClanOnSchool", onDelete: CASCADE)
    createdBy: User @relation(name: "SchoolOnUser", onDelete: SET_NULL)
    id: ID! @id
    name: String!
}

type Tournament {
    createdBy: User @relation(name: "TournamentOnUser", onDelete: SET_NULL)
    id: ID! @id
    name: String!
    players: [Player!] @relation(name: "PlayerOnTournament", onDelete: SET_NULL)
    poules: [Poule!] @relation(name: "PouleOnTournament", onDelete: CASCADE)
    poulesType: PoulesType!
}

type User {
    academies: [Academy!] @relation(name: "AcademiesOnUser", onDelete: SET_NULL)
    clans: [Clan!] @relation(name: "ClanOnUser", onDelete: SET_NULL)
    email: String! @unique
    forms: [Form!] @relation(name: "FormOnUser", onDelete: SET_NULL)
    id: ID! @id
    name: String!
    password: String!
    players: [Player!] @relation(name: "PlayerOnUser", onDelete: SET_NULL)
    poules: [Poule!] @relation(name: "PouleOnUser", onDelete: SET_NULL)
    schools: [School!] @relation(name: "SchoolOnUser", onDelete: SET_NULL)
    tournaments: [Tournament!] @relation(name: "TournamentOnUser", onDelete: SET_NULL)
}